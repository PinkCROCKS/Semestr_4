        -:    0:Source:/mnt/d/Уник/4 сем/Фунды/mun 1.1/tests/tests.cpp
        -:    0:Graph:/mnt/d/Уник/4 сем/Фунды/mun 1.1/cmake-build-debug-coverage/CMakeFiles/tests.dir/tests/tests.cpp.gcno
        -:    0:Data:/mnt/d/Уник/4 сем/Фунды/mun 1.1/cmake-build-debug-coverage/CMakeFiles/tests.dir/tests/tests.cpp.gcda
        -:    0:Runs:1
        -:    1:#include <gtest/gtest.h>
        -:    2:#include "functions.hpp"
        -:    3:
        -:    4:using namespace my_container;
        -:    5:
        4:    6:TEST(ArrayTest, Constructor_Default) {
        1:    7:    Array<int, 5> arr;
       1*:    8:    EXPECT_EQ(arr.size(), 5);
       1*:    9:    EXPECT_EQ(arr.empty(), false);
        1:   10:}
------------------
_ZN34ArrayTest_Constructor_Default_TestC2Ev:
function _ZN34ArrayTest_Constructor_Default_TestC2Ev called 1 returned 100% blocks executed 100%
        1:    6:TEST(ArrayTest, Constructor_Default) {
        1:    6-block  0
call    0 returned 1
------------------
_ZN34ArrayTest_Constructor_Default_TestD0Ev:
function _ZN34ArrayTest_Constructor_Default_TestD0Ev called 1 returned 100% blocks executed 100%
        1:    6:TEST(ArrayTest, Constructor_Default) {
        1:    6-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN34ArrayTest_Constructor_Default_TestD2Ev:
function _ZN34ArrayTest_Constructor_Default_TestD2Ev called 1 returned 100% blocks executed 100%
        1:    6:TEST(ArrayTest, Constructor_Default) {
        1:    6-block  0
call    0 returned 1
------------------
_ZN34ArrayTest_Constructor_Default_Test8TestBodyEv:
function _ZN34ArrayTest_Constructor_Default_Test8TestBodyEv called 1 returned 100% blocks executed 25%
        1:    6:TEST(ArrayTest, Constructor_Default) {
        1:    7:    Array<int, 5> arr;
       1*:    8:    EXPECT_EQ(arr.size(), 5);
        1:    8-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    8-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:    8-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:    8-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:    8-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:    8-block  5
call   17 never executed
call   18 never executed
        1:    8-block  6
call   19 returned 1
    $$$$$:    8-block  7
    $$$$$:    8-block  8
    $$$$$:    8-block  9
call   20 never executed
    $$$$$:    8-block 10
    $$$$$:    8-block 11
call   21 never executed
    $$$$$:    8-block 12
    $$$$$:    8-block 13
call   22 never executed
       1*:    9:    EXPECT_EQ(arr.empty(), false);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:    9-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:    9-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:    9-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:    9-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:    9-block  4
call   17 never executed
call   18 never executed
        1:    9-block  5
call   19 returned 1
    $$$$$:    9-block  6
    $$$$$:    9-block  7
    $$$$$:    9-block  8
call   20 never executed
    $$$$$:    9-block  9
    $$$$$:    9-block 10
call   21 never executed
    $$$$$:    9-block 11
    $$$$$:    9-block 12
call   22 never executed
        1:   10:}
call    0 returned 1
    $$$$$:   10-block  0
call    1 never executed
------------------
        -:   11:
        4:   12:TEST(ArrayTest, Constructor_InitializeList) {
        1:   13:    Array<int, 3> arr = {1, 2, 3};
       1*:   14:    ASSERT_EQ(arr.size(), 3);
       1*:   15:    EXPECT_EQ(arr[0], 1);
       1*:   16:    EXPECT_EQ(arr[1], 2);
       1*:   17:    EXPECT_EQ(arr[2], 3);
        1:   18:}
------------------
_ZN41ArrayTest_Constructor_InitializeList_TestC2Ev:
function _ZN41ArrayTest_Constructor_InitializeList_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   12:TEST(ArrayTest, Constructor_InitializeList) {
        1:   12-block  0
call    0 returned 1
------------------
_ZN41ArrayTest_Constructor_InitializeList_TestD0Ev:
function _ZN41ArrayTest_Constructor_InitializeList_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   12:TEST(ArrayTest, Constructor_InitializeList) {
        1:   12-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN41ArrayTest_Constructor_InitializeList_TestD2Ev:
function _ZN41ArrayTest_Constructor_InitializeList_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   12:TEST(ArrayTest, Constructor_InitializeList) {
        1:   12-block  0
call    0 returned 1
------------------
_ZN41ArrayTest_Constructor_InitializeList_Test8TestBodyEv:
function _ZN41ArrayTest_Constructor_InitializeList_Test8TestBodyEv called 1 returned 100% blocks executed 30%
        1:   12:TEST(ArrayTest, Constructor_InitializeList) {
        1:   13:    Array<int, 3> arr = {1, 2, 3};
        1:   13-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   13-block  1
       1*:   14:    ASSERT_EQ(arr.size(), 3);
        1:   14-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   14-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   14-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   14-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   14-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   14-block  5
call   17 never executed
call   18 never executed
        1:   14-block  6
        1:   14-block  7
call   19 returned 1
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:   14-block  8
    $$$$$:   14-block  9
    $$$$$:   14-block 10
    $$$$$:   14-block 11
call   22 never executed
    $$$$$:   14-block 12
    $$$$$:   14-block 13
call   23 never executed
    $$$$$:   14-block 14
    $$$$$:   14-block 15
call   24 never executed
       1*:   15:    EXPECT_EQ(arr[0], 1);
        1:   15-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   15-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   15-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   15-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   15-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   15-block  5
call   17 never executed
call   18 never executed
        1:   15-block  6
call   19 returned 1
    $$$$$:   15-block  7
    $$$$$:   15-block  8
call   20 never executed
    $$$$$:   15-block  9
    $$$$$:   15-block 10
call   21 never executed
    $$$$$:   15-block 11
    $$$$$:   15-block 12
call   22 never executed
       1*:   16:    EXPECT_EQ(arr[1], 2);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   16-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   16-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   16-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   16-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   16-block  4
call   17 never executed
call   18 never executed
        1:   16-block  5
call   19 returned 1
    $$$$$:   16-block  6
    $$$$$:   16-block  7
call   20 never executed
    $$$$$:   16-block  8
    $$$$$:   16-block  9
call   21 never executed
    $$$$$:   16-block 10
    $$$$$:   16-block 11
call   22 never executed
       1*:   17:    EXPECT_EQ(arr[2], 3);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   17-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   17-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   17-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   17-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   17-block  4
call   17 never executed
call   18 never executed
        1:   17-block  5
call   19 returned 1
    $$$$$:   17-block  6
    $$$$$:   17-block  7
call   20 never executed
    $$$$$:   17-block  8
    $$$$$:   17-block  9
call   21 never executed
    $$$$$:   17-block 10
    $$$$$:   17-block 11
call   22 never executed
        1:   18:}
        1:   18-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0
    $$$$$:   18-block  1
call    3 never executed
------------------
        -:   19:
        4:   20:TEST(ArrayTest, At) {
        1:   21:    Array<int, 2> arr;
        1:   22:    arr[0] = 10;
        1:   23:    arr[1] = 20;
       1*:   24:    EXPECT_EQ(arr.at(0), 10);
       1*:   25:    EXPECT_THROW(arr.at(2), std::out_of_range);
        1:   26:}
------------------
_ZN17ArrayTest_At_TestC2Ev:
function _ZN17ArrayTest_At_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   20:TEST(ArrayTest, At) {
        1:   20-block  0
call    0 returned 1
------------------
_ZN17ArrayTest_At_TestD0Ev:
function _ZN17ArrayTest_At_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   20:TEST(ArrayTest, At) {
        1:   20-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN17ArrayTest_At_TestD2Ev:
function _ZN17ArrayTest_At_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   20:TEST(ArrayTest, At) {
        1:   20-block  0
call    0 returned 1
------------------
_ZN17ArrayTest_At_Test8TestBodyEv:
function _ZN17ArrayTest_At_Test8TestBodyEv called 1 returned 100% blocks executed 26%
        1:   20:TEST(ArrayTest, At) {
        1:   21:    Array<int, 2> arr;
        1:   22:    arr[0] = 10;
        1:   22-block  0
call    0 returned 1
        1:   23:    arr[1] = 20;
call    0 returned 1
       1*:   24:    EXPECT_EQ(arr.at(0), 10);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   24-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   24-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   24-block  2
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:   24-block  3
call   12 never executed
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   24-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   24-block  5
call   19 never executed
call   20 never executed
        1:   24-block  6
call   21 returned 1
    $$$$$:   24-block  7
    $$$$$:   24-block  8
call   22 never executed
    $$$$$:   24-block  9
    $$$$$:   24-block 10
call   23 never executed
    $$$$$:   24-block 11
    $$$$$:   24-block 12
call   24 never executed
       1*:   25:    EXPECT_THROW(arr.at(2), std::out_of_range);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:   25-block  0
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   25-block  1
branch  7 taken 1 (fallthrough)
branch  8 taken 0
        1:   25-block  2
call    9 returned 1
branch 10 taken 0 (fallthrough)
branch 11 taken 1 (throw)
        1:   25-block  3
branch 12 taken 0 (fallthrough)
branch 13 taken 1
    %%%%%:   25-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   25-block  5
    %%%%%:   25-block  6
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   25-block  7
call   20 never executed
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
    %%%%%:   25-block  8
call   24 never executed
branch 25 never executed (fallthrough)
branch 26 never executed (throw)
    %%%%%:   25-block  9
call   27 never executed
call   28 never executed
        1:   25-block 10
call   29 returned 1
        1:   25-block 11
branch 30 taken 1
branch 31 taken 0
branch 32 taken 0
        1:   25-block 12
call   33 returned 1
call   34 returned 1
    $$$$$:   25-block 13
call   35 never executed
call   36 never executed
branch 37 never executed (fallthrough)
branch 38 never executed (throw)
    $$$$$:   25-block 14
call   39 never executed
branch 40 never executed (fallthrough)
branch 41 never executed (throw)
    $$$$$:   25-block 15
call   42 never executed
branch 43 never executed (fallthrough)
branch 44 never executed (throw)
    $$$$$:   25-block 16
call   45 never executed
call   46 never executed
branch 47 never executed (fallthrough)
branch 48 never executed (throw)
    $$$$$:   25-block 17
call   49 never executed
call   50 never executed
branch 51 never executed (fallthrough)
branch 52 never executed (throw)
    $$$$$:   25-block 18
call   53 never executed
branch 54 never executed (fallthrough)
branch 55 never executed (throw)
    $$$$$:   25-block 19
    $$$$$:   25-block 20
call   56 never executed
    $$$$$:   25-block 21
call   57 never executed
call   58 never executed
branch 59 never executed (fallthrough)
branch 60 never executed (throw)
    $$$$$:   25-block 22
    $$$$$:   25-block 23
call   61 never executed
branch 62 never executed (fallthrough)
branch 63 never executed (throw)
    $$$$$:   25-block 24
call   64 never executed
    $$$$$:   25-block 25
    $$$$$:   25-block 26
call   65 never executed
    $$$$$:   25-block 27
call   66 never executed
    $$$$$:   25-block 28
call   67 never executed
    $$$$$:   25-block 29
    $$$$$:   25-block 30
call   68 never executed
    $$$$$:   25-block 31
    $$$$$:   25-block 32
call   69 never executed
        1:   26:}
call    0 returned 1
    $$$$$:   26-block  0
call    1 never executed
------------------
        -:   27:
        4:   28:TEST(ArrayTest, Front_Back) {
        1:   29:    Array<int, 3> arr = {5, 10, 15};
       1*:   30:    EXPECT_EQ(arr.front(), 5);
       1*:   31:    EXPECT_EQ(arr.back(), 15);
       1*:   32:    EXPECT_EQ(*arr.data(), 5);
        1:   33:}
------------------
_ZN25ArrayTest_Front_Back_TestC2Ev:
function _ZN25ArrayTest_Front_Back_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   28:TEST(ArrayTest, Front_Back) {
        1:   28-block  0
call    0 returned 1
------------------
_ZN25ArrayTest_Front_Back_TestD0Ev:
function _ZN25ArrayTest_Front_Back_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   28:TEST(ArrayTest, Front_Back) {
        1:   28-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN25ArrayTest_Front_Back_TestD2Ev:
function _ZN25ArrayTest_Front_Back_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   28:TEST(ArrayTest, Front_Back) {
        1:   28-block  0
call    0 returned 1
------------------
_ZN25ArrayTest_Front_Back_Test8TestBodyEv:
function _ZN25ArrayTest_Front_Back_Test8TestBodyEv called 1 returned 100% blocks executed 26%
        1:   28:TEST(ArrayTest, Front_Back) {
        1:   29:    Array<int, 3> arr = {5, 10, 15};
        1:   29-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   29-block  1
       1*:   30:    EXPECT_EQ(arr.front(), 5);
        1:   30-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   30-block  1
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   30-block  2
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   30-block  3
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   30-block  4
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   30-block  5
call   17 never executed
call   18 never executed
        1:   30-block  6
call   19 returned 1
    $$$$$:   30-block  7
    $$$$$:   30-block  8
call   20 never executed
    $$$$$:   30-block  9
    $$$$$:   30-block 10
call   21 never executed
    $$$$$:   30-block 11
    $$$$$:   30-block 12
call   22 never executed
       1*:   31:    EXPECT_EQ(arr.back(), 15);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   31-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   31-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   31-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   31-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   31-block  4
call   17 never executed
call   18 never executed
        1:   31-block  5
call   19 returned 1
    $$$$$:   31-block  6
    $$$$$:   31-block  7
call   20 never executed
    $$$$$:   31-block  8
    $$$$$:   31-block  9
call   21 never executed
    $$$$$:   31-block 10
    $$$$$:   31-block 11
call   22 never executed
       1*:   32:    EXPECT_EQ(*arr.data(), 5);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   32-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   32-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   32-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   32-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   32-block  4
call   17 never executed
call   18 never executed
        1:   32-block  5
call   19 returned 1
    $$$$$:   32-block  6
    $$$$$:   32-block  7
call   20 never executed
    $$$$$:   32-block  8
    $$$$$:   32-block  9
call   21 never executed
    $$$$$:   32-block 10
    $$$$$:   32-block 11
call   22 never executed
        1:   33:}
call    0 returned 1
    $$$$$:   33-block  0
call    1 never executed
------------------
        -:   34:
        4:   35:TEST(ArrayTest, Iterator_Test) {
        1:   36:    Array<int, 3> arr = {1, 2, 3};
        1:   37:    int sum = 0;
        4:   38:    for (auto it = arr.begin(); it != arr.end(); ++it) sum += *it;
       1*:   39:    EXPECT_EQ(sum, 6);
        1:   40:}
------------------
_ZN28ArrayTest_Iterator_Test_TestC2Ev:
function _ZN28ArrayTest_Iterator_Test_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   35:TEST(ArrayTest, Iterator_Test) {
        1:   35-block  0
call    0 returned 1
------------------
_ZN28ArrayTest_Iterator_Test_TestD0Ev:
function _ZN28ArrayTest_Iterator_Test_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   35:TEST(ArrayTest, Iterator_Test) {
        1:   35-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN28ArrayTest_Iterator_Test_TestD2Ev:
function _ZN28ArrayTest_Iterator_Test_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   35:TEST(ArrayTest, Iterator_Test) {
        1:   35-block  0
call    0 returned 1
------------------
_ZN28ArrayTest_Iterator_Test_Test8TestBodyEv:
function _ZN28ArrayTest_Iterator_Test_Test8TestBodyEv called 1 returned 100% blocks executed 38%
        1:   35:TEST(ArrayTest, Iterator_Test) {
        1:   36:    Array<int, 3> arr = {1, 2, 3};
        1:   36-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   36-block  1
        1:   37:    int sum = 0;
        4:   38:    for (auto it = arr.begin(); it != arr.end(); ++it) sum += *it;
        1:   38-block  0
call    0 returned 1
        3:   38-block  1
        4:   38-block  2
call    1 returned 4
branch  2 taken 3
branch  3 taken 1 (fallthrough)
       1*:   39:    EXPECT_EQ(sum, 6);
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   39-block  1
call    3 returned 1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    %%%%%:   39-block  2
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
    %%%%%:   39-block  3
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   39-block  4
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   39-block  5
call   16 never executed
call   17 never executed
        1:   39-block  6
call   18 returned 1
    $$$$$:   39-block  7
    $$$$$:   39-block  8
call   19 never executed
    $$$$$:   39-block  9
    $$$$$:   39-block 10
call   20 never executed
    $$$$$:   39-block 11
    $$$$$:   39-block 12
call   21 never executed
        1:   40:}
call    0 returned 1
    $$$$$:   40-block  0
call    1 never executed
------------------
        -:   41:
        4:   42:TEST(ArrayTest, Fill_And_Swap) {
        1:   43:    Array<int, 4> arr1;
        1:   44:    arr1.fill(5);
        1:   45:    Array<int, 4> arr2 = {0, 0, 0, 0};
        1:   46:    arr1.swap(arr2);
       1*:   47:    EXPECT_EQ(arr2[0], 5);
       1*:   48:    EXPECT_EQ(arr1[0], 0);
        1:   49:}
------------------
_ZN28ArrayTest_Fill_And_Swap_TestC2Ev:
function _ZN28ArrayTest_Fill_And_Swap_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   42:TEST(ArrayTest, Fill_And_Swap) {
        1:   42-block  0
call    0 returned 1
------------------
_ZN28ArrayTest_Fill_And_Swap_TestD0Ev:
function _ZN28ArrayTest_Fill_And_Swap_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   42:TEST(ArrayTest, Fill_And_Swap) {
        1:   42-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN28ArrayTest_Fill_And_Swap_TestD2Ev:
function _ZN28ArrayTest_Fill_And_Swap_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   42:TEST(ArrayTest, Fill_And_Swap) {
        1:   42-block  0
call    0 returned 1
------------------
_ZN28ArrayTest_Fill_And_Swap_Test8TestBodyEv:
function _ZN28ArrayTest_Fill_And_Swap_Test8TestBodyEv called 1 returned 100% blocks executed 30%
        1:   42:TEST(ArrayTest, Fill_And_Swap) {
        1:   43:    Array<int, 4> arr1;
        1:   44:    arr1.fill(5);
        1:   44-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   44-block  1
        1:   45:    Array<int, 4> arr2 = {0, 0, 0, 0};
        1:   45-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   45-block  1
        1:   46:    arr1.swap(arr2);
        1:   46-block  0
call    0 returned 1
       1*:   47:    EXPECT_EQ(arr2[0], 5);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   47-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   47-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   47-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   47-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   47-block  4
call   17 never executed
call   18 never executed
        1:   47-block  5
call   19 returned 1
    $$$$$:   47-block  6
    $$$$$:   47-block  7
call   20 never executed
    $$$$$:   47-block  8
    $$$$$:   47-block  9
call   21 never executed
    $$$$$:   47-block 10
    $$$$$:   47-block 11
call   22 never executed
       1*:   48:    EXPECT_EQ(arr1[0], 0);
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   48-block  0
call    4 returned 1
branch  5 taken 0 (fallthrough)
branch  6 taken 1
    %%%%%:   48-block  1
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
    %%%%%:   48-block  2
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
    %%%%%:   48-block  3
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   48-block  4
call   17 never executed
call   18 never executed
        1:   48-block  5
call   19 returned 1
    $$$$$:   48-block  6
    $$$$$:   48-block  7
call   20 never executed
    $$$$$:   48-block  8
    $$$$$:   48-block  9
call   21 never executed
    $$$$$:   48-block 10
    $$$$$:   48-block 11
call   22 never executed
        1:   49:}
call    0 returned 1
call    1 returned 1
    $$$$$:   49-block  0
call    2 never executed
    $$$$$:   49-block  1
call    3 never executed
------------------
        -:   50:
        4:   51:TEST(ArrayTest, Equality_Operators) {
        1:   52:    Array<int, 2> arr1 = {1, 2};
        1:   53:    Array<int, 2> arr2 = {1, 2};
        1:   54:    Array<int, 2> arr3 = {3, 4};
       1*:   55:    EXPECT_EQ(arr1 == arr2, true);
       1*:   56:    EXPECT_EQ(arr1 != arr3, true);
        1:   57:}
------------------
_ZN33ArrayTest_Equality_Operators_TestC2Ev:
function _ZN33ArrayTest_Equality_Operators_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   51:TEST(ArrayTest, Equality_Operators) {
        1:   51-block  0
call    0 returned 1
------------------
_ZN33ArrayTest_Equality_Operators_TestD0Ev:
function _ZN33ArrayTest_Equality_Operators_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   51:TEST(ArrayTest, Equality_Operators) {
        1:   51-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN33ArrayTest_Equality_Operators_TestD2Ev:
function _ZN33ArrayTest_Equality_Operators_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   51:TEST(ArrayTest, Equality_Operators) {
        1:   51-block  0
call    0 returned 1
------------------
_ZN33ArrayTest_Equality_Operators_Test8TestBodyEv:
function _ZN33ArrayTest_Equality_Operators_Test8TestBodyEv called 1 returned 100% blocks executed 29%
        1:   51:TEST(ArrayTest, Equality_Operators) {
        1:   52:    Array<int, 2> arr1 = {1, 2};
        1:   52-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   52-block  1
        1:   53:    Array<int, 2> arr2 = {1, 2};
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   53-block  1
        1:   54:    Array<int, 2> arr3 = {3, 4};
        1:   54-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   54-block  1
       1*:   55:    EXPECT_EQ(arr1 == arr2, true);
        1:   55-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   55-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   55-block  2
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   55-block  3
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:   55-block  4
call   12 never executed
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   55-block  5
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   55-block  6
call   19 never executed
call   20 never executed
        1:   55-block  7
call   21 returned 1
    $$$$$:   55-block  8
    $$$$$:   55-block  9
    $$$$$:   55-block 10
call   22 never executed
    $$$$$:   55-block 11
    $$$$$:   55-block 12
call   23 never executed
    $$$$$:   55-block 13
    $$$$$:   55-block 14
call   24 never executed
       1*:   56:    EXPECT_EQ(arr1 != arr3, true);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   56-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   56-block  1
call    6 returned 1
branch  7 taken 0 (fallthrough)
branch  8 taken 1
    %%%%%:   56-block  2
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
    %%%%%:   56-block  3
call   12 never executed
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
    %%%%%:   56-block  4
call   16 never executed
branch 17 never executed (fallthrough)
branch 18 never executed (throw)
    %%%%%:   56-block  5
call   19 never executed
call   20 never executed
        1:   56-block  6
call   21 returned 1
    $$$$$:   56-block  7
    $$$$$:   56-block  8
    $$$$$:   56-block  9
call   22 never executed
    $$$$$:   56-block 10
    $$$$$:   56-block 11
call   23 never executed
    $$$$$:   56-block 12
    $$$$$:   56-block 13
call   24 never executed
        1:   57:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   57-block  0
call    3 never executed
    $$$$$:   57-block  1
call    4 never executed
    $$$$$:   57-block  2
call    5 never executed
------------------
        -:   58:
        4:   59:TEST(ArrayTest, More_Less_Operators) {
        1:   60:    Array<int, 3> arr1 = {1, 2, 3};
        1:   61:    Array<int, 3> arr2 = {1, 2, 4};
        1:   62:    Array<int, 3> arr3 = {1, 2, 3};
       1*:   63:    EXPECT_EQ(arr1 < arr2, true);
       1*:   64:    EXPECT_EQ(arr2 > arr1, true);
       1*:   65:    EXPECT_EQ(arr1 <= arr3, true);
       1*:   66:    EXPECT_EQ(arr3 >= arr1, true);
        1:   67:}
------------------
_ZN34ArrayTest_More_Less_Operators_TestC2Ev:
function _ZN34ArrayTest_More_Less_Operators_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   59:TEST(ArrayTest, More_Less_Operators) {
        1:   59-block  0
call    0 returned 1
------------------
_ZN34ArrayTest_More_Less_Operators_TestD0Ev:
function _ZN34ArrayTest_More_Less_Operators_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   59:TEST(ArrayTest, More_Less_Operators) {
        1:   59-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN34ArrayTest_More_Less_Operators_TestD2Ev:
function _ZN34ArrayTest_More_Less_Operators_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   59:TEST(ArrayTest, More_Less_Operators) {
        1:   59-block  0
call    0 returned 1
------------------
_ZN34ArrayTest_More_Less_Operators_Test8TestBodyEv:
function _ZN34ArrayTest_More_Less_Operators_Test8TestBodyEv called 1 returned 100% blocks executed 28%
        1:   59:TEST(ArrayTest, More_Less_Operators) {
        1:   60:    Array<int, 3> arr1 = {1, 2, 3};
        1:   60-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   60-block  1
        1:   61:    Array<int, 3> arr2 = {1, 2, 4};
        1:   61-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   61-block  1
        1:   62:    Array<int, 3> arr3 = {1, 2, 3};
        1:   62-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   62-block  1
       1*:   63:    EXPECT_EQ(arr1 < arr2, true);
        1:   63-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   63-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   63-block  2
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   63-block  3
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   63-block  4
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   63-block  5
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   63-block  6
call   20 never executed
call   21 never executed
        1:   63-block  7
call   22 returned 1
    $$$$$:   63-block  8
    $$$$$:   63-block  9
    $$$$$:   63-block 10
call   23 never executed
    $$$$$:   63-block 11
    $$$$$:   63-block 12
call   24 never executed
    $$$$$:   63-block 13
    $$$$$:   63-block 14
call   25 never executed
       1*:   64:    EXPECT_EQ(arr2 > arr1, true);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   64-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   64-block  1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   64-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   64-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   64-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   64-block  5
call   20 never executed
call   21 never executed
        1:   64-block  6
call   22 returned 1
    $$$$$:   64-block  7
    $$$$$:   64-block  8
    $$$$$:   64-block  9
call   23 never executed
    $$$$$:   64-block 10
    $$$$$:   64-block 11
call   24 never executed
    $$$$$:   64-block 12
    $$$$$:   64-block 13
call   25 never executed
       1*:   65:    EXPECT_EQ(arr1 <= arr3, true);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   65-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   65-block  1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   65-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   65-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   65-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   65-block  5
call   20 never executed
call   21 never executed
        1:   65-block  6
call   22 returned 1
    $$$$$:   65-block  7
    $$$$$:   65-block  8
    $$$$$:   65-block  9
call   23 never executed
    $$$$$:   65-block 10
    $$$$$:   65-block 11
call   24 never executed
    $$$$$:   65-block 12
    $$$$$:   65-block 13
call   25 never executed
       1*:   66:    EXPECT_EQ(arr3 >= arr1, true);
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   66-block  0
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   66-block  1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   66-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   66-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   66-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   66-block  5
call   20 never executed
call   21 never executed
        1:   66-block  6
call   22 returned 1
    $$$$$:   66-block  7
    $$$$$:   66-block  8
    $$$$$:   66-block  9
call   23 never executed
    $$$$$:   66-block 10
    $$$$$:   66-block 11
call   24 never executed
    $$$$$:   66-block 12
    $$$$$:   66-block 13
call   25 never executed
        1:   67:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
    $$$$$:   67-block  0
call    3 never executed
    $$$$$:   67-block  1
call    4 never executed
    $$$$$:   67-block  2
call    5 never executed
------------------
        -:   68:
        4:   69:TEST(ArrayTest, Three_Way_Comparison) {
        1:   70:    Array<int, 3> arr1 = {1, 2, 3};
        1:   71:    Array<int, 3> arr2 = {1, 2, 4};
       1*:   72:    EXPECT_EQ((arr1 <=> arr2) < 0, true);
        1:   73:}
------------------
_ZN35ArrayTest_Three_Way_Comparison_TestC2Ev:
function _ZN35ArrayTest_Three_Way_Comparison_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   69:TEST(ArrayTest, Three_Way_Comparison) {
        1:   69-block  0
call    0 returned 1
------------------
_ZN35ArrayTest_Three_Way_Comparison_TestD0Ev:
function _ZN35ArrayTest_Three_Way_Comparison_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   69:TEST(ArrayTest, Three_Way_Comparison) {
        1:   69-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN35ArrayTest_Three_Way_Comparison_TestD2Ev:
function _ZN35ArrayTest_Three_Way_Comparison_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   69:TEST(ArrayTest, Three_Way_Comparison) {
        1:   69-block  0
call    0 returned 1
------------------
_ZN35ArrayTest_Three_Way_Comparison_Test8TestBodyEv:
function _ZN35ArrayTest_Three_Way_Comparison_Test8TestBodyEv called 1 returned 100% blocks executed 33%
        1:   69:TEST(ArrayTest, Three_Way_Comparison) {
        1:   70:    Array<int, 3> arr1 = {1, 2, 3};
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   70-block  1
        1:   71:    Array<int, 3> arr2 = {1, 2, 4};
        1:   71-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   71-block  1
       1*:   72:    EXPECT_EQ((arr1 <=> arr2) < 0, true);
        1:   72-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   72-block  1
call    3 returned 1
call    4 returned 1
branch  5 taken 1 (fallthrough)
branch  6 taken 0 (throw)
        1:   72-block  2
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   72-block  3
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   72-block  4
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   72-block  5
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   72-block  6
call   20 never executed
call   21 never executed
        1:   72-block  7
call   22 returned 1
    $$$$$:   72-block  8
    $$$$$:   72-block  9
    $$$$$:   72-block 10
call   23 never executed
    $$$$$:   72-block 11
    $$$$$:   72-block 12
call   24 never executed
    $$$$$:   72-block 13
    $$$$$:   72-block 14
call   25 never executed
        1:   73:}
call    0 returned 1
call    1 returned 1
    $$$$$:   73-block  0
call    2 never executed
    $$$$$:   73-block  1
call    3 never executed
------------------
        -:   74:
        4:   75:TEST(ArrayTest, Output_Operator) {
        1:   76:    Array<int, 3> arr = {10, 20, 30};
        1:   77:    std::stringstream ss;
        1:   78:    ss << arr;
       1*:   79:    EXPECT_EQ(ss.str(), "10 20 30 ");
        1:   80:}
------------------
_ZN30ArrayTest_Output_Operator_TestC2Ev:
function _ZN30ArrayTest_Output_Operator_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   75:TEST(ArrayTest, Output_Operator) {
        1:   75-block  0
call    0 returned 1
------------------
_ZN30ArrayTest_Output_Operator_TestD0Ev:
function _ZN30ArrayTest_Output_Operator_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   75:TEST(ArrayTest, Output_Operator) {
        1:   75-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN30ArrayTest_Output_Operator_TestD2Ev:
function _ZN30ArrayTest_Output_Operator_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   75:TEST(ArrayTest, Output_Operator) {
        1:   75-block  0
call    0 returned 1
------------------
_ZN30ArrayTest_Output_Operator_Test8TestBodyEv:
function _ZN30ArrayTest_Output_Operator_Test8TestBodyEv called 1 returned 100% blocks executed 36%
        1:   75:TEST(ArrayTest, Output_Operator) {
        1:   76:    Array<int, 3> arr = {10, 20, 30};
        1:   76-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   76-block  1
        1:   77:    std::stringstream ss;
        1:   77-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   78:    ss << arr;
        1:   78-block  0
call    0 returned 1
call    1 returned 1
branch  2 taken 1 (fallthrough)
branch  3 taken 0 (throw)
        1:   78-block  1
call    4 returned 1
    $$$$$:   78-block  2
call    5 never executed
    $$$$$:   78-block  3
       1*:   79:    EXPECT_EQ(ss.str(), "10 20 30 ");
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   79-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   79-block  1
call    6 returned 1
call    7 returned 1
branch  8 taken 0 (fallthrough)
branch  9 taken 1
    %%%%%:   79-block  2
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
    %%%%%:   79-block  3
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
    %%%%%:   79-block  4
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
    %%%%%:   79-block  5
call   20 never executed
call   21 never executed
        1:   79-block  6
call   22 returned 1
    $$$$$:   79-block  7
call   23 never executed
    $$$$$:   79-block  8
    $$$$$:   79-block  9
call   24 never executed
    $$$$$:   79-block 10
    $$$$$:   79-block 11
call   25 never executed
    $$$$$:   79-block 12
    $$$$$:   79-block 13
call   26 never executed
        1:   80:}
call    0 returned 1
call    1 returned 1
    $$$$$:   80-block  0
call    2 never executed
    $$$$$:   80-block  1
call    3 never executed
------------------
        -:   81:
function main called 1 returned 100% blocks executed 100%
        1:   82:int main(int argc, char **argv) {
        1:   83:    testing::InitGoogleTest(&argc, argv);
        1:   83-block  0
call    0 returned 1
        1:   84:    return RUN_ALL_TESTS();
call    0 returned 1
        -:   85:}
